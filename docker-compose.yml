version: '3.8'

services:
  camunda:
    image: camunda/camunda-bpm-platform:7.18.0
    container_name: camunda-engine
    ports:
      - "8080:8080"
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://postgres:5432/camunda
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - WAIT_FOR=postgres:5432
    depends_on:
      - postgres
    networks:
      - camunda-network
    volumes:
      - camunda-data:/camunda/webapps

  postgres:
    image: postgres:13
    container_name: camunda-postgres
    environment:
      - POSTGRES_DB=camunda
      - POSTGRES_USER=camunda
      - POSTGRES_PASSWORD=camunda
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - camunda-network

  middleware:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    container_name: eligibility-middleware
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_BASE_URL=${API_BASE_URL}
      - CAMUNDA_BASE_URL=http://camunda:8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=camunda
      - DB_USER=camunda
      - DB_PASSWORD=camunda
      - DATA_API_URL=http://data-api:3001
    depends_on:
      - camunda
      - postgres
      - data-api
    networks:
      - camunda-network
    volumes:
      - ./middleware:/app
      - /app/node_modules

  data-api:
    build:
      context: ./data
      dockerfile: Dockerfile
    container_name: external-data-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATA_API_PORT=3001
    networks:
      - camunda-network
    volumes:
      - ./data:/app
      - /app/node_modules

volumes:
  camunda-data:
  postgres-data:

networks:
  camunda-network:
    driver: bridge
