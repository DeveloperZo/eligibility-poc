{
  "queries": [
    {
      "name": "listBenefitPlans",
      "type": "restapi",
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "GET",
        "url": "{{ EligibilityAPI.base_url }}/data/health-plans",
        "headers": {
          "Content-Type": "application/json"
        },
        "timeout": 10000,
        "enableTransformer": true,
        "transformer": "return {\n  data: data.data || [],\n  success: data.success,\n  total: data.data?.length || 0\n};",
        "triggerConditions": {
          "onPageLoad": true,
          "manual": false
        }
      }
    },
    {
      "name": "listEligibilityRules",
      "type": "restapi", 
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "GET",
        "url": "{{ EligibilityAPI.base_url }}/rules",
        "headers": {
          "Content-Type": "application/json"
        },
        "timeout": 10000,
        "enableTransformer": true,
        "transformer": "return {\n  data: data.data || [],\n  success: data.success,\n  total: data.data?.length || 0\n};",
        "triggerConditions": {
          "onPageLoad": true,
          "manual": false
        }
      }
    },
    {
      "name": "getEmployees",
      "type": "restapi",
      "resourceName": "EligibilityAPI", 
      "configuration": {
        "method": "GET",
        "url": "{{ EligibilityAPI.base_url }}/data/employees",
        "headers": {
          "Content-Type": "application/json"
        },
        "timeout": 10000,
        "enableTransformer": true,
        "transformer": "return {\n  data: data.data || [],\n  success: data.success\n};",
        "triggerConditions": {
          "onPageLoad": true,
          "manual": false
        }
      }
    },
    {
      "name": "createEligibilityRule",
      "type": "restapi",
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "POST", 
        "url": "{{ EligibilityAPI.base_url }}/rules/create",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "name": "{{ ruleNameInput.value }}",
          "description": "{{ ruleDescriptionInput.value }}",
          "type": "{{ ruleTypeSelect.value }}",
          "configuration": "{{ getRuleConfiguration() }}"
        },
        "timeout": 30000,
        "enableTransformer": true,
        "transformer": "if (data.success) {\n  return {\n    success: true,\n    rule: data.data,\n    message: 'Rule created successfully'\n  };\n} else {\n  throw new Error(data.error?.message || 'Failed to create rule');\n}",
        "triggerConditions": {
          "onPageLoad": false,
          "manual": true
        },
        "successNotification": {
          "enabled": true,
          "title": "Rule Created",
          "description": "{{ self.data.rule.name }} created successfully"
        },
        "errorNotification": {
          "enabled": true,
          "title": "Failed to create rule",
          "description": "{{ self.error?.message || 'Unable to create rule' }}"
        }
      }
    },
    {
      "name": "deleteEligibilityRule",
      "type": "restapi",
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "DELETE",
        "url": "{{ EligibilityAPI.base_url }}/rules/{{ selectedRuleId }}",
        "headers": {
          "Content-Type": "application/json"
        },
        "timeout": 15000,
        "enableTransformer": true,
        "transformer": "if (data.success) {\n  return {\n    success: true,\n    message: 'Rule deleted successfully'\n  };\n} else {\n  throw new Error(data.error?.message || 'Failed to delete rule');\n}",
        "triggerConditions": {
          "onPageLoad": false,
          "manual": true
        },
        "successNotification": {
          "enabled": true,
          "title": "Rule Deleted",
          "description": "Rule deleted successfully"
        },
        "errorNotification": {
          "enabled": true,
          "title": "Failed to delete rule",
          "description": "{{ self.error?.message || 'Unable to delete rule' }}"
        }
      }
    },
    {
      "name": "testEligibilityRule",
      "type": "restapi",
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "POST",
        "url": "{{ EligibilityAPI.base_url }}/rules/{{ selectedRuleId }}/test",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "employeeId": "{{ selectedEmployeeId }}",
          "employeeData": "{{ selectedEmployeeData }}"
        },
        "timeout": 15000,
        "enableTransformer": true,
        "transformer": "return {\n  eligible: data.data?.eligible || false,\n  reasoning: data.data?.reasoning || 'No reasoning provided',\n  executionTime: data.data?.executionTime || 0,\n  timestamp: data.data?.timestamp || new Date().toISOString()\n};",
        "triggerConditions": {
          "onPageLoad": false,
          "manual": true
        }
      }
    },
    {
      "name": "healthCheck",
      "type": "restapi",
      "resourceName": "EligibilityAPI",
      "configuration": {
        "method": "GET",
        "url": "{{ EligibilityAPI.base_url.replace('/api', '') }}/health",
        "headers": {
          "Content-Type": "application/json"
        },
        "timeout": 5000,
        "enableTransformer": true,
        "transformer": "return {\n  data: data.data || null,\n  status: data.data?.status || 'UNKNOWN',\n  healthy: data.data?.status === 'OK',\n  dependencies: data.data?.dependencies || {}\n};",
        "triggerConditions": {
          "onPageLoad": true,
          "manual": false
        }
      }
    }
  ]
}
